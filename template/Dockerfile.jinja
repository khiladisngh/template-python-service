# ==============================================================================
# Multi Stage: Bake Image
# ==============================================================================

FROM python:{{ python_version }}-slim AS bake

# Arguments associated with the non-root user
ARG USERNAME={{ project_name }}-svc
ARG USER_UID=1000
ARG USER_GID=$USER_UID

# Set environment variables for uv
ENV UV_CACHE_DIR=/tmp/uv-cache \
    UV_PYTHON_PREFERENCE=only-system \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install uv
RUN curl -LsSf https://astral.sh/uv/install.sh | sh
ENV PATH="/root/.cargo/bin:$PATH"

# Add the non-root user
RUN groupadd --gid "$USER_GID" "$USERNAME" \
    && useradd --uid "$USER_UID" --gid "$USER_GID" -m "$USERNAME"

# Set working directory
WORKDIR /app

# Make working directory owned by the service user
RUN chown ${USER_UID}:${USER_GID} /app

# Switch to the non-root user
USER ${USERNAME}

# Copy dependency files
COPY --chown=${USER_UID}:${USER_GID} pyproject.toml README.md ./

# Install dependencies
RUN uv venv .venv
RUN uv pip install -e .

# Copy source code
COPY --chown=${USER_UID}:${USER_GID} src ./src

# ==============================================================================
# Multi Stage: Runtime Image
# ==============================================================================

FROM python:{{ python_version }}-slim AS runtime

# Create the service user
ARG USERNAME={{ project_name }}-svc
ARG USER_UID=1000
ARG USER_GID=$USER_UID

RUN groupadd --gid "$USER_GID" "$USERNAME" \
    && useradd --uid "$USER_UID" --gid "$USER_GID" -m "$USERNAME"

# Set working directory
WORKDIR /app

# Copy application and virtual environment from bake stage
COPY --from=bake --chown=${USER_UID}:${USER_GID} /app /app

# Switch to the service user
USER ${USERNAME}

# Set environment variables
ENV PATH="/app/.venv/bin:$PATH" \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD {{ cli_name }} --help > /dev/null || exit 1

# Default command
ENTRYPOINT ["{{ cli_name }}"]
CMD ["--help"]